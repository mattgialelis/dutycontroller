nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

# Controller Options
leaderElect: false

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /readyz
    port: http

replicaCount: 1
image:
  repository: ghcr.io/mattgialelis/dutycontroller
  pullPolicy: IfNotPresent
  # -- The image tag to use. The default is the chart appVersion.
  tag: ""

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

serviceAccount:
  create: true
  automount: true
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

rbac:
  create: true

monitoring:
  enabled: false  # Set to true to enable metrics port
  port: 8080      # Port for metrics endpoint
  serviceMonitor:
    enabled: false
    additionalLabels: {}

service:
  type: ClusterIP
  ports:
    name: http
    port: 8081  # Default port for your application
    targetPort: http
    protocol: TCP

## Extra environment variables to add to container.
extraEnv: []
  # - name: PAGERDUTY_TOKEN
  #   value: abc124

# Note: THese are the secrets that are mounted as envFrom on the pod
envFrom: []
  # - secretRef:
  #     name: dutycontroller-envs

podAnnotations: {}

podLabels: {}

nodeSelector: {}

tolerations: []

affinity: {}

# Create a dynamic manifests via values
# This is ran thru the tpl function in the templates so variables can be used as normal
extraObjects: []
  # - apiVersion: external-secrets.io/v1beta1
  #   kind: ExternalSecret
  #   metadata:
  #     name: dutycontroller-envs
  #   spec:
  #     data:
  #     - remoteRef:
  #         conversionStrategy: Default
  #         decodingStrategy: None
  #         key: pagerduty-token
  #       secretKey: PAGERDUTY_TOKEN
  #     refreshInterval: 1h
  #     secretStoreRef:
  #       kind: ClusterSecretStore
  #       name: my-cluster-store
